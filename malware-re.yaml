AWSTemplateFormatVersion: '2010-09-09'
Metadata:
  License: Apache-2.0
Description: Cloudformation stack for malware reverse engineering
Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  AdminUser:
    Description: User name for the new local administrator account
    Type: String
    Default: StackAdmin
    MinLength: 5
    MaxLength: 25
    AllowedPattern: "[a-zA-Z0-9]*"
  AdminPassword:
    Description: Password for the administrative account. Must be at least 8 characters containing letters, numbers and symbols
    Type: String
    MinLength: 8
    MaxLength: 32
    AllowedPattern: "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*"
    NoEcho: true
  InstanceType:
    Description: Amazon EC2 instance type for Remote Desktop Gateway instances
    Type: String
    Default: t2.large
    AllowedValues: [
        t2.large,
        t2.xlarge,
        t2.2xlarge,
    ]
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-windows-latest/Windows_Server-2019-English-Full-Base'
  VPC:
    Description: Existing Virtual Private Cloud identifier
    Type: String
  NetworkCIDR:
    Description: Subnet for this instance. CIDR must be within the VPC superblock.
    Type: String
    AllowedPattern: "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$"
    ConstraintDescription: CIDR block parameter must be in the form x.x.x.x/16-28
  RestrictedIngress:
    Description: Restrict ingress from the following IP or network
    Type: String
    Default: 0.0.0.0/0
Resources:
  # Subnets
  RESubnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone:
        Fn::Select:
        - 0
        - Fn::GetAZs: {Ref: 'AWS::Region'}
      VpcId: !Ref VPC
      CidrBlock: !Ref NetworkCIDR
      MapPublicIpOnLaunch: true
      Tags:
        -
          Key: Name
          Value: malwarere-subnet
  # Security Groups
  RESecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupName: malwarere-sg
      GroupDescription: Security group for malware analysis subnet
      Tags:
        -
          Key: Name
          Value: malwarere-sg
      SecurityGroupIngress:
      - CidrIp: !Ref RestrictedIngress
        FromPort: 3389
        ToPort: 3389
        IpProtocol: tcp
  # EC2 instances
  REWorkstation:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !Ref LatestAmiId
      SecurityGroupIds: [!Ref RESecurityGroup]
      SubnetId: !Ref RESubnet
      BlockDeviceMappings:
        -
          DeviceName: /dev/sda1
          Ebs:
            VolumeSize: 150
      Tags:
        -
          Key: Name
          Value: malwarere-ec2-instance
      UserData:
        Fn::Base64: !Sub |
          <powershell>
            function Add-Users {
                Param (
                    [string]$Username,
                    [string]$Password
                )
                $secpassword = $Password | ConvertTo-SecureString -AsPlainText -Force
                New-LocalUser -Name $Username -Password $secpassword -PasswordNeverExpires
                Add-LocalGroupMember -Group "Administrators" -Member $Username
                Add-LocalGroupMember -Group "Remote Desktop Users" -Member $Username
            }

            Write-Host "Adding users..."
            Add-Users -Username ${AdminUser} -Password ${AdminPassword}

            Write-Host "Configuring RDP..."
            Set-ItemProperty -Path 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "SecurityLayer" -value 0

            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12; (new-object Net.WebClient).DownloadString("https://raw.githubusercontent.com/jknyght9/aws-cf-malwareanalysis-template/master/install_ma_software.ps1") | iex; install_ma_software
            
          </powershell>
          <persist>true</persist>
  REWorkstationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: malwarere-cloudwatch-alarm
      AlarmDescription: CPU utilization alarm w/ 10% as threshold
      AlarmActions: 
        - Fn::Join: [ ':', [ 'arn:aws:swf', !Ref 'AWS::Region', !Ref 'AWS::AccountId', 'action/actions/AWS_EC2.InstanceId.Stop/1.0' ]]
      EvaluationPeriods: 3
      MetricName: CPUUtilization
      Namespace: AWS/EC2
      Statistic: Minimum
      Period: 300
      Threshold: 10.0
      ComparisonOperator: LessThanThreshold
      Dimensions:
        - Name: InstanceId
          Value: !Ref REWorkstation
      TreatMissingData: missing
Outputs:
  RESubnetId:
    Description: Subnet ID of newly created subnet
    Value: !Ref RESubnet
  REWorkstation:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref REWorkstation